{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedInLinks","_this","this","react_default","a","createElement","className","react_router_dom","to","onClick","props","sighOut","profile","initials","Component","connect","dispatch","getState","_ref2","getFirebase","auth","signOut","then","type","catch","err","SignedOutLinks","Navbar","_this$props","links","uid","layout_SignedInLinks","SignedOutLinks_SignedOutLinks","state","console","log","firebase","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","index","Dashboard","ProjectList_ProjectList","dashboard_Notifications","react_router","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6356dd5d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from \"../../store/actions/authActions\";\n\nclass SignedInLinks extends Component {\n  render() {\n    return (\n      <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a onClick={() => {this.props.sighOut()} }>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{this.props.profile.initials}</NavLink></li>\n      </ul>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sighOut: () => dispatch(signOut())\n  }\n}\n\n\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS'})\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err })\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut()\n    .then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS'})\n\n    }).catch((err) => {\n      dispatch({ type: 'SIGNOUT_ERROR', err })\n\n    })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password,\n    )\n    .then((res) => {\n      return firestore.collection('users').doc(res.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0],\n      })\n    })\n    .then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class SignedOutLinks extends Component {\n  render() {\n    return (\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from \"react-redux\";\n\n\nclass Navbar extends Component {\n  render() {\n    const { auth, profile } = this.props\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Link to='/' className=\"brand-logo\">YoshiPlan</Link>\n          { links }\n        </div>\n      </nav>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Notifications extends Component {\n  render() {\n    const { notifications } = this.props;\n    return (\n      <div className=\"section\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Notifications</span>\n            <ul className=\"notifications\">\n              { notifications && notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Notifications","import React from 'react';\nimport moment from 'moment';\n\nexport default function ProjectSummary({project}) {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from \"react-router-dom\";\n\nexport default class ProjectList extends Component {\n  render() {\n    const { projects } = this.props;\n    return (\n      <div className=\"project-list section\">\n        {\n          projects && projects.map((project,index) => {\n            return (\n              <Link to={'/project/' + project.id} key={index}>\n                <ProjectSummary project={project} key={index}/>\n              </Link>\n              )\n          })\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects}/>\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nfunction ProjectDetails(props) {\n  const { project, auth } = props;\n  if(!auth.uid) return <Redirect to='/signin' />\n  if(project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{ project.content }</p>\n          </div>\n          <div className=\"card-action gray lighten-4 grey-text\">\n            <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state)\n    console.log(this.state)\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  }\n}\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(SignUp)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState ={\n  authError: null,\n}\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('logout success')\n      return state\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state\n  }\n}\n\nexport default authReducer","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBakE4pAmA8M-Pvi5b62wN0n7-5j9luk8Y\",\n  authDomain: \"yoshi-plan.firebaseapp.com\",\n  databaseURL: \"https://yoshi-plan.firebaseio.com\",\n  projectId: \"yoshi-plan\",\n  storageBucket: \"\",\n  messagingSenderId: \"177633136817\",\n  appId: \"1:177633136817:web:c0ce731d4c171567\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  , document.getElementById('root'));\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}